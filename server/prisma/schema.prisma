// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  seed     = "prisma/seed.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Products {
  id            String      @id @default(cuid())
  name          String
  price         Float
  rating        Float
  stockQuantity Int
  created_at    DateTime    @default(now())
  updated_at    DateTime    @updatedAt
  Sales         Sales[]
  Purchases     Purchases[]
}

model Users {
  id         String   @id @default(cuid())
  name       String
  email      String   @unique
  phone      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Expenses {
  id         String   @id @default(cuid())
  category   String
  amount     Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Sales {
  id          String   @id @default(cuid())
  quantity    Int
  unitPrice   Float
  totalAmount Float
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  productID   String
  product     Products @relation(fields: [productID], references: [id])
}

model Purchases {
  id         String   @id @default(cuid())
  productID  String
  quantity   Int
  unitCost   Float
  totalCost  Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  product    Products @relation(fields: [productID], references: [id])
}

model SalesSummary {
  id               String   @id @default(cuid())
  totalValue       Float
  changePercentage Float?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
}

model PurchaseSummary {
  id               String   @id @default(cuid())
  totalValue       Float
  changePercentage Float?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
}

model ExpenseSummary {
  id               String              @id @default(cuid())
  totalExpenses    Float
  changePercentage Float?
  created_at       DateTime            @default(now())
  updated_at       DateTime            @updatedAt
  categories       ExpenseByCategory[]
}

model ExpenseByCategory {
  id               String         @id @default(cuid())
  expenseSummaryID String
  category         String
  amount           Float
  created_at       DateTime       @default(now())
  updated_at       DateTime       @updatedAt
  expenseSummary   ExpenseSummary @relation(fields: [expenseSummaryID], references: [id])
}
