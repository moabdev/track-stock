// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                          String    @id @default(cuid())
  name                        String
  email                       String    @unique
  hashedPassword              String
  lastLogin                   DateTime  @default(now())
  isVerified                  Boolean   @default(false)
  date                        DateTime  @default(now())
  resetPasswordToken          String?
  resetPasswordTokenExpiresAt DateTime?
  verificationToken           String?
  verificationTokenExpiresAt  DateTime?

  @@map("users")
}

model Product {
  id            String     @id @default(cuid())
  name          String
  price         Float
  rating        Float?
  stockQuantity Int
  Sales         Sale[]
  Purchases     Purchase[]

  @@map("products")
}

model Sale {
  id          String   @id @default(cuid())
  productId   String
  timestamp   DateTime
  quantity    Int
  unitPrice   Float
  totalAmount Float
  product     Product  @relation(fields: [productId], references: [id])

  @@map("sales")
}

model Purchase {
  id        String   @id @default(cuid())
  productId String
  timestamp DateTime
  quantity  Int
  unitCost  Float
  totalCost Float
  product   Product  @relation(fields: [productId], references: [id])

  @@map("purchases")
}

model Expense {
  id        String   @id @default(cuid())
  category  String
  amount    Float
  timestamp DateTime

  @@map("expenses")
}

model SaleSummary {
  id               String   @id @default(cuid())
  totalValue       Float
  changePercentage Float?
  date             DateTime

  @@map("sales_summaries")
}

model PurchaseSummary {
  id               String   @id @default(cuid())
  totalPurchased   Float
  changePercentage Float?
  date             DateTime

  @@map("purchase_summaries")
}

model ExpenseSummary {
  id                String              @id @default(cuid())
  totalExpenses     Float
  date              DateTime
  ExpenseByCategory ExpenseByCategory[]

  @@map("expense_summaries")
}

model ExpenseByCategory {
  id               String         @id @default(cuid())
  expenseSummaryId String
  category         String
  amount           BigInt
  date             DateTime
  expenseSummary   ExpenseSummary @relation(fields: [expenseSummaryId], references: [id])

  @@map("expenses_by_category")
}
